{"version":3,"sources":["LiveWeatherSearch.js","App.js","index.js"],"names":["LiveWeatherSearch","useState","city","setCity","search","setSearch","useEffect","a","url","fetch","response","json","resJson","main","fetchApi","className","type","onChange","event","target","value","placeholder","temp","temp_min","temp_max","App","ReactDOM","render","document","getElementById"],"mappings":"+RAiEeA,EA3DW,WACxB,MAAwBC,mBAAS,MAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA4BF,mBAAS,UAArC,mBAAOG,EAAP,KAAeC,EAAf,KAaA,OAXAC,qBAAU,YACM,uCAAG,gCAAAC,EAAA,6DACTC,EADS,2DACiDJ,EADjD,iEAEQK,MAAMD,GAFd,cAETE,EAFS,gBAIOA,EAASC,OAJhB,OAITC,EAJS,OAKfT,EAAQS,EAAQC,MALD,2CAAH,qDAOdC,KACC,CAACV,IAGF,mCACE,sBAAKW,UAAU,OAAf,UACE,qBAAKA,UAAU,SAAf,SACE,uBACEC,KAAK,SACLC,SAAU,SAACC,GACTb,EAAUa,EAAMC,OAAOC,QAEzBL,UAAU,aACVM,YAAY,aAIdnB,EAMA,sBAAKa,UAAU,OAAf,UACE,sBAAKA,UAAU,WAAf,UACE,cAAC,IAAD,CAAkBA,UAAU,iBAC5B,uBACCX,KAGH,qBAAIW,UAAU,OAAd,UAAsBb,EAAKoB,KAA3B,SACA,qBAAIP,UAAU,eAAd,kBACQb,EAAKqB,SADb,YACgCrB,EAAKsB,SADrC,YAbF,oBAAGT,UAAU,WAAb,UACE,cAAC,IAAD,CAAuBA,UAAU,0BADnC,mBAmBF,qBAAKA,UAAU,UACf,qBAAKA,UAAU,UACf,qBAAKA,UAAU,eACf,qBAAKA,UAAU,gBACf,qBAAKA,UAAU,sBC9CRU,EATL,WACN,OACI,mCACI,cAAC,EAAD,OCAZC,IAASC,OAEL,cAAC,EAAD,IACFC,SAASC,eAAe,W","file":"static/js/main.2dcade82.chunk.js","sourcesContent":["import React, { useState } from \"react\";\r\nimport LocationCityIcon from \"@material-ui/icons/LocationCity\";\r\nimport NotListedLocationIcon from \"@material-ui/icons/NotListedLocation\";\r\nimport \"./App.css\";\r\nimport { useEffect } from \"react\";\r\n\r\nconst LiveWeatherSearch = () => {\r\n  const [city, setCity] = useState(null);\r\n  const [search, setSearch] = useState(\"Mumbai\");\r\n\r\n  useEffect(() => {\r\n    const fetchApi = async () => {\r\n      const url = `http://api.openweathermap.org/data/2.5/weather?q=${search}&units=metric&appid=32cbc643fb378b9b1100a7888197680a`;\r\n      const response = await fetch(url);\r\n\r\n      const resJson = await response.json();\r\n      setCity(resJson.main);\r\n    };\r\n    fetchApi();\r\n  }, [search]);\r\n\r\n  return (\r\n    <>\r\n      <div className=\"card\">\r\n        <div className=\"search\">\r\n          <input\r\n            type=\"search\"\r\n            onChange={(event) => {\r\n              setSearch(event.target.value);\r\n            }}\r\n            className=\"inputField\"\r\n            placeholder=\"Mumbai\"\r\n          />\r\n        </div>\r\n\r\n        {!city ? (\r\n          <p className=\"notFound\">\r\n            <NotListedLocationIcon className=\"NotListedLocationIcon\" />\r\n            No Data Found\r\n          </p>\r\n        ) : (\r\n          <div className=\"info\">\r\n            <div className=\"cityname\">\r\n              <LocationCityIcon className=\"locationIcon\" />\r\n              <br />\r\n              {search}\r\n            </div>\r\n\r\n            <h1 className=\"temp\">{city.temp} *C</h1>\r\n            <h3 className=\"min_max_temp\">\r\n              Min: {city.temp_min} *C| max:{city.temp_max} *C\r\n            </h3>\r\n          </div>\r\n        )}\r\n\r\n        <div className=\"wave1\"></div>\r\n        <div className=\"wave2\"></div>\r\n        <div className=\"ballBounce\"></div>\r\n        <div className=\"ballBounce1\"></div>\r\n        <div className=\"ballBounce2\"></div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default LiveWeatherSearch;\r\n","import React from 'react';\n\nimport LiveWeatherSearch from \"./LiveWeatherSearch\";\n\nconst App=()=>{\n    return(\n        <>\n            <LiveWeatherSearch/>\n          \n        </>\n    );\n\n}\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n  \n    <App />,\n  document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}